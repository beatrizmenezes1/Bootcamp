#INTRODUÇÃO AO FLEXBOX

- Conhecer a estrutura básica
- Entender a diferença entre Flex Container e Flex Item
- Conhecer inicialmente algumas propriedades

Suporte: Foi projetado como um modelo de layout unidimensional e como método que pode oferecer distribuição de espaço itens em uma interface e recursos de alinhamento.

-- Flex Container: É a tag que envolve os itens, será nela que iremos aplicar a propriedade "display: flex". Transforma todos os seus itens filhos em flex itens. 
A tag que possui itens filhos, independente do valor, eles vão ser alinhados a partir do momento que é inicializado o display: flex. 
Pode ser feita em qualquer tipo de tag, por exemplo: div, span, h1..h2...a. A partir do momento que essa tag tem itens filhos, ela é passiva de ser aplicada a propriedade do display: flex.

Propriedades relacionadas:
- display:inicializador do contanier
- flex-direction: realiza o direcionamento desses itens do container, seja em linha, seja em coluna
- flex-wrap: vai se aplicar para quebra de linha
- flex-flow: abreviação para o direction e o wrap (os dois acima)
- justify-content: vai alinhar os itens do container de acordo com a sua direção
- align-items: vai alinhar esses itens de acordo com o seu eixo do contanier
- align-content: vai alinhar as linhas desse container

-- Flex Iten: São os elementos filhos diretos do Flex Container. E também podem se tornar Flex Container.

Propriedades relacionadas:
- flex-grow: define o valor de crescimento.
- flex-basis: define o valor inicial desse item antes da distribuição do espaço restante dentro do container.
- flex-shrink: define a capacidade de redução
- flex: abreviação para as três propriedades acima.
- order: relacionado a ordem de distribuição e listagem desses itens
- align-self: define o alinhamento especifico de um item no nosso container.

-----------------------------------------------------------------------------------------------

#FUNDAMENTOS DO FLEXBOX - PARTE 1 - foco Flex Container

## ESTRUTURA BÁSICA DO DISPLAY: FLEX
  
- Display Flex:
Torna a tag um elemento do tipo flex container, e assim automaticamente todos os seus filhos diretos desta tag, torna-se em flex itens.

## PRÁTICA COM DISPLAY: FLEX

atalho: div.item*3 + tab : cria/autocompleta 3 itens

display: flex; - o item passa a ocupar o máximo do seu conteúdo e se abrigar dentro do seu container respeitando a limitação em linha.
 * * Inicializa um container, agrupa esses elementos filhos e transforma eles de modo que eles vão respeitar o tamanho proporcional ao seu conteúdo.

## ESTRUTURA BÁSICA DO FLEX DIRECTION

Flex-direction: É a propriedade que estabelece o eixo principal do container, definindo assim a direção que os flex items são colocados no flex container.

Os eixos...

º row (padrão): à direção do texto, esquerda para direita. ex: 1 2 3 4 
º row-reverse: sentido oposto à direção do texto. ex: 4 3 2 1 
º columm: ordenação de cima para baixo, em coluna única. ex: 1
												   2
												   3
												   4

º columm-reverse: ordenação inversa, de baixo para cima. ex: 4
												   3
												   2
												   1


## ESTRUTURA BÁSICA DO FLEX WRAP

É a propriedade que define se os itens devem ou não quebrar a linha. Por padrão eles não quebram linhas, isso faz com que os flex itens sejam compactados além do limite do conteúdo.


º nowrap: é o padrão, não permite a quebra de linha.
º wrap: permite a quebra de linha assim que um dos flex itens não puder mais ser compactado.
º wrap-reverse: permite a quebra de linha assim que um dos flex itens não puder mais ser compactado, porém na direção contrária da linha acima.

## ESTRUTURA BÁSICA E PRÁTICA COM FLEX FLOW

É um atalho para as propriedades flex-direction e flex-wrap. Porém seu uso não é tão comum, visto que, quando mudamos o flex-direction para column'''''''''''''''''''''''''''''''', mantemos o padrão do flex-wrap que é nowrap.

## ESTRUTURA BÁSICA DO JUSTIFY CONTENT

Essa propriedade vai se encarregar de alinhar os itens dentro do container de acordo com a direção pretendida e tratar da distribuição de espaçamento entre eles.

OBS: Caso seus itens esteja ocupando 100% de todo o container, ela não se aplica.

As variações:

º flex-start: início do container.
º flex-end: final do container.
º center: ao centro do container.
º space-betwenn: cria um espaçamento igual entre os elementos.
º space-around: os espaçamentos do meio são duas vezes maiores que o inicial e final.


## PRÁTICA COM JUSTIFY CONTENT PART 1 E 2:

## ESTRUTURA BÁSICA E PRÁTICA COM ALIGN ITEMS


Trata do alinhamento dos flex itens de acordo com o eixo do container. O alinhamento é diferente para quando os itens estão em colunas ou linhas. Permite o alinhamento central no eixo vertical.

Tipos de alinhamento

º center: alinamento dos itens ao centro
º stretch: padrão, e os flex itens cresçam igualmente
º flex-start: alinhamento dos itens no início
º flex-end: alinhamento dos itens no final
º baseline: alinhamento de acordo com a linha base da tipográfia dos itens.



## ESTRUTURA BÁSICA E PRÁTICA COM ALIGN CONTENT

É a propriedade responsável por tratar o alinhamento das linhas do container em relação ao eixo vertical do container.

Precisamos que

º O container utilize quebra de linhas
º A altura do container seja maior que a soma das linhas dos itens.

Tipos de alinhamento


º center: alinhamento dos itens ao centro
º stretch: é o padrão e os flex itens crescem igualmente
º flex-start: alinhamento dos itens no início
º flex-end: alinhamento dos itens no final
º space-between: cria um espaçamento igual entre os elementos
º space-around: os espaçamentos do meio são duas vezes maiores que o inicial e final 




#FUNDAMENTOS DO FLEXBOX - PARTE 2 - foco Flex Items

## ESTRUTURA BÁSICA E PRÁTICA COM FLEX GROW

Define a proporcionalidade de crescimento dos itens, respeitando o tamanho de seus conteúdos internos. Quando se trabalha com flex-grow, só pode ter números, ou vai ser 0 ou vai ser um número relacionado a proporção de crescimento.


OBS: não irá funcionar caso tenhamos adicionado justify-content o nosso flex container


## ESTRUTURA BÁSICA DO FLEX BASIS E PRÁTICA


É a propriedade que estabelece o tamanho inicial do item antes das distribuição de espaço restante dentro dele, usando como base o conteúdo interno disposto. Vai lidar com o tamanho mínimo esperado por esse item.

Valores possíveis:

º auto: caso o item não tenha tamanho, este será proporcional ao conteúdo do item.
º px, %, em, ... : são valores exatos previamente definidos
º 0 (zero): terá relação com a definição do flex-grow

## ESTRUTURA BÁSICA DO FLEX SHRINK E PRÁTICA

É a propriedade que estabalece a capacidade de redução ou compressão do tamanho de um item.


## ESTRUTURA BÁSICA E PRÁTICA DO FLEX

shta propriedade é um atalho ou abreviação de escrita para as propriedades: grow, shrink e basis.

flex: 1 0 auto seria algo como definir 


## ESTRUTURA BÁSICA  E PRÁTICA DO ORDER


Propriedade que vai lidar diretamente com a ordenação dos nosso itens


## ESTRUTURA BÁSICA E PRÁTICA COM ALIGN SELF

É a propriedade que estabelece o alinhamento de modo individual sobre um determinado item.

Valores possíveis

º auto: valor padrão, irá respeitar a definição de align-items do container
º flex-start: ao início do container
º flex-end: ao final do container
º center: relativo ao centro de acordo com o eixo
º stretch: ocupa todo o espaço relativo
º baseline: utiliza a linha base da tipografia





























